---
title: "SOC3070 Análisis de Datos Categóricos"
author: "Tarea corta 4, respuestas"
format: html
editor: visual
---

```{r, echo=T, message=FALSE}
# Escribir install.packages("tinytex") en la consola para instalar "tinytex"
# Carga "tinytex" para compilar PDF
library("tidyverse")
library("carData") 
library("modelr") 
library("caret") 
data("Chile") 
datos_chile <- Chile
```

Ponderación: 6% de la nota final del curso.

$$\newcommand{\vect}[1]{\boldsymbol{#1}}$$

![NO](no.jpg)

## Datos:

Cargar datos con el siguiente código

```{r, echo=T, message=FALSE}
data("Chile") 
datos_chile <- Chile
datos_chile <- datos_chile %>% mutate(vote = case_when(vote=="Y" ~ 1, vote=="N" ~ 0)) 
datos_chile %>% glimpse()
```

## Problema:

En esta tarea usarás los datos de una encuesta realizada por FLACSO/Chile en Abril y Mayo de 1988 sobre intención de voto en el plebiscito de 1989, junto con otras variables socio-demográficas.

En particular, trabajarás con el siguiente modelo de regresión logística que estima la probabilidad de votar SI en función de los ingresos, género (M=Hombre, F=Mujer) y el apoyo al status-quo (valores más altos indican mayor apoyo al régimen de Pinochet).

```{r}
modelo_1 <- glm(vote ~ income  + sex*statusquo, family=binomial, data = datos_chile )
summary(modelo_1)
```

1.  Calcula la probabilidad de votar por el SI para hombres y mujeres cuyos ingresos y apoyo al status-quo se encuentran en el decil 10 (10% superior) de cada variable.

```{r, echo=T}
income_q90 = quantile(datos_chile$income, p=0.9, na.rm = T)
statusquo_q90 = quantile(datos_chile$statusquo, p=0.9, na.rm = T)

grid <- datos_chile %>% data_grid(sex,income=income_q90, statusquo = statusquo_q90, .model=modelo_1)
newx <- grid %>% mutate(logit = predict(modelo_1, newdata = grid), p_hat = 1/(1 + exp(-logit)))

print(newx %>% select(sex,income,statusquo, p_hat))

```

2.  Usa el método de Bootstrap para crear un intervalo de confianza al 98% para la diferencia en la probabilidad de votar por el SI entre hombres y mujeres cuyos ingresos y apoyo al status-quo se encuentran en el decil 10 (10% superior) de cada variable. ¿Existe una diferencia estadísticamente significativa en la probabilidad de votar por el SI de ambos grupos?

```{r, echo=T}

results <- NULL

for (i in 1:1000) {
  
  data_b  <- sample_n(datos_chile,size=nrow(datos_chile), replace=TRUE)
  logit_b <- glm(modelo_1$formula, family=binomial(link="logit"), data=data_b)
  newx <- grid %>% mutate(logit = predict(logit_b, newdata = grid), p_hat = 1/(1 + exp(-logit)))
  
  p_yes_m <- newx %>% filter(sex=="M") %>% pull(p_hat)
  p_yes_f <- newx %>% filter(sex=="F") %>% pull(p_hat)

  diff_p_yes <-  p_yes_m - p_yes_f
  results[i] <-  diff_p_yes 
}



ci_diffs_bs <- quantile(results, p=c(0.01,0.99))

results %>% as_tibble() %>% ggplot(aes(x=value)) + geom_density(colour="blue") + geom_vline(xintercept=ci_diffs_bs, colour="red") +
  labs(x= "Dif. en probabilidad de votar por el SI entre hombre y mujer del decil 10 (intervalo al 98% de confianza)")

```

Al 98% de confianza no existe una diferencia estadísticamente significativa en la probabilidad de votar por el SI de ambos grupos.

3.  Ademas del `modelo_1` usado anteriormente, crea un modelo más completa usando la información presente en la base de datos. Llama a este modelo, `modelo_2.`

<!-- -->

a.  Usando un umbral de $0.5$, crea un clasificación de la intención de voto de los individuos de la muestra de acuerdo a ambos modelos y compara la "confusion matrix" de ambos.

```{r}

modelo_1 <- glm(factor(vote) ~ income  + sex*statusquo, family="binomial", data=datos_chile)
modelo_2 <- glm(factor(vote) ~ income  + sex*statusquo + age + income*education + region + population, family="binomial", data=datos_chile)


p_hat_1 <- predict(modelo_1, type = "response")
y_hat_1 <- if_else(p_hat_1>0.5,1,0)

p_hat_2 <- predict(modelo_2, type = "response")
y_hat_2 <- if_else(p_hat_2>0.5,1,0)


#confussion matrix

conf_mat_1 <- confusionMatrix(factor(y_hat_1),modelo_1$model$`factor(vote)`, dnn = c("Prediction", "True value"), positive = "1")
conf_mat_1$table

conf_mat_2 <- confusionMatrix(factor(y_hat_2),modelo_2$model$`factor(vote)`, dnn = c("Prediction", "True value"), positive = "1")
conf_mat_2$table

```

b.  Usa 10-fold cross-validation (paquete `caret` en `R`) para evaluar qué modelo predice mejor la intención de voto de los individuos encuestados. (`caret` usa un umbral de $0.5$ para la clasificación).

```{r, echo=T}

# formulas
f_modelo_1 <- formula(factor(vote) ~ income  + sex*statusquo)
f_modelo_2 <- formula(factor(vote) ~ income  + sex*statusquo + age + income*education + region + population)

# especifica tipo de cross-validation
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)

# cross-valida model_1
cv_modelo_1 <- train(f_modelo_1, method="glm", family="binomial", data=datos_chile, trControl = ctrl, na.action = "na.omit")

# cross-valida model_2
cv_modelo_2 <- train(f_modelo_2, method="glm", family="binomial", data=datos_chile, trControl = ctrl, na.action = "na.omit")

cv_conf_mat_1 <- confusionMatrix(cv_modelo_1, dnn = c("Prediction", "True value")); cv_conf_mat_1
cv_conf_mat_2 <- confusionMatrix(cv_modelo_2, dnn = c("Prediction", "True value")); cv_conf_mat_2

```
