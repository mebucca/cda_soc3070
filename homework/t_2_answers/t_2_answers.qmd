---
title: "SOL3070 Análisis de Datos Categóricos"
author: "Trabajo 2"
format: html
editor: visual
---

```{r, echo=FALSE,message=FALSE, warnings=FALSE}
library("pacman")
p_load("tidyverse","nnet","modelr","marginaleffects")
options(scipen = 999)
```

## Información

-   Ponderación: 20% de la nota final del curso.

-   Bonus: Responder la pregunta "bonus" NO es un requisito necesario para obtener puntaje completo. Responder incorrectamente la pregunta "bonus" no afectará negativamente la nota obtenida, pero responderla correctamente mejorará la nota obtenida en un máximo de 0.5 puntos (o en la cantidad necesaria para obtener nota máxima si la nota original fuera superior a 6.5)

## Introducción

En este trabajo se utilizarán datos extraídos de 9.303 biografías de chilenos disponibles en Wikipedia, en hasta 160 idiomas. Esta información fue recopilada como parte del proyecto de investigación 'Social Memory about Chileans in Wikipedia', financiado por Wikimedia Research Fund. Si utilizas estos datos, por favor cita la siguiente publicación: Beytía, P., Rojas, C. & Cruz, C. (2024). Social memory about people from a country. The case of notable Chileans in Wikipedia. Wiki Workshop 2024.

Estos datos se emplearán para modelar la probabilidad de que una persona con biografía en Wikipedia pertenezca a una de las siguientes cuatro categorías de la vida pública: 'Cultura & Ciencia', 'Política', 'Deporte' u 'Otro'. Como variables predictoras se utilizarán el género y el año de nacimiento de los individuos.

Los datos están disponibles en el repositorio del curso para ser descargados.

## Datos

Visualización rápida de la base de datos:

```{r, message=FALSE, warnings=FALSE}

path <- '/Users/mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2024_2_categorical_data_analysis/repo/homework/t_2_answers'


setwd(path)
wiki_chileans <-  read_csv("wiki_chileans.csv") %>% as_tibble()

wiki_chileans %>% glimpse()

#wiki_chileans <- wiki_chileans %>% 
#  select(personLabel,genderLabel,category,birthyear)
#
#
#wiki_chileans <- wiki_chileans %>%
#  mutate(category = case_when(
#    category %in% c("Arte", "Humanidades", "Educación", "Ciencia y tecnología", #"Comunicaciones" ) ~ "Cultura & Ciencia",
#    category %in% c("Política", "Derecho") ~ "Política",
#    category %in% c("Deporte") ~ "Deporte",
#    TRUE ~ "Otro" # Incluye "Negocios", "Ejército y seguridad", "Otra", "Religión", #"Crimen
#  ))
#
#
#wiki_chileans <- wiki_chileans %>% mutate(
#  person = personLabel,
#  genero = genderLabel,
#  agno_nacimiento = birthyear,
#  categoria = category) %>%
#  select(person,categoria,genero,agno_nacimiento)  %>%
#  filter(genero != "género fluido" & genero != "mujer transgénero")

#write_csv(wiki_chileans, "/Users/mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2024_2_categorical_data_analysis/hw_ans/t_2_answers/wiki_chileans.csv")

print(wiki_chileans)
```

## Ejercicios

### I. Regresión Logística Multinomial

1.  Utiliza regresión logística multinomial para modelar la probabilidad de que una persona con biografía en Wikipedia pertenezca a una de las siguientes cuatro categorías de la vida pública: "Cultura & Ciencia", "Política", "Deporte", u "Otro", en función del género y el año de nacimiento (sin interacción). Escribe la ecuación de regresión correspindiente a este modelo y presenta un `summary()` de los resultados y utiliza "Otro" como la categoría de referencia en la variable dependiente.

Ecuación:

$$\log\left( \frac{P(\text{categoría }_j)}{P(\text{otro})} \right) = \beta_{0j} + \beta_{1j} \times \text{género} + \beta_{2j} \times \text{año}
$$

```{r}
wiki_chileans$categoria <- factor(wiki_chileans$categoria, levels = c("Otro","Cultura & Ciencia","Política","Deporte"))

wiki_chileans$categoria <- relevel(wiki_chileans$categoria, ref = "Otro")

mnlr_1 <- multinom(categoria ~ genero + agno_nacimiento, data=wiki_chileans)
summary(mnlr_1)
```

1.1 Interpreta los coeficientes asociados a `hombre-Política` y `agno_nacimiento-Deporte` en términos de log-odds.

El coeficiente para `hombre` en la categoría "Política" es -0.3292. Es decir, manteniendo constante el año de nacimiento, ser hombre está asociado con una disminución de 0.3292 en los log-odds de pertenecer a la categoría "Política" en lugar de "Cultura & Ciencia".

El coeficiente para agno_nacimiento en la categoría Deporte es 0.0592. Es decir, independiente del género, por cada año más reciente de nacimiento los log-odds de pertenecer a la categoría "Deporte" en lugar de "Cultura & Ciencia" aumentan en 0.0592 unidades.

1.2 Expresa las ecuaciones y calcula las odds de pertenecer a la categoría "Política" de un hombre y de una mujer nacidos en el año 1950. Explica cómo estas odds se relacionan con la cantidad obtenida al exponencia el coeficiente `hombre-Política`.

-   Log-odds para hombres:

    $$\text{log-odds}_{\text{hombre}} = \beta_{0} + \beta_{\text{hombre}} \cdot 1 + \beta_{\text{agno}} \cdot \text{agno}$$

-   Log-odds para mujeres:

    $$\text{log-odds}_{\text{mujer}} = \beta_{0} + \beta_{\text{hombre}} \cdot 0 + \beta_{\text{agno}} \cdot \text{agno}$$

Por tanto, el ratio de odds entre hombres y mujeres se define como:

$$\text{Ratio} = \frac{\text{odds}_{\text{hombre}}}{\text{odds}_{\text{mujer}}} = \frac{e^{\text{log-odds}_{\text{hombre}}}}{e^{\text{log-odds}_{\text{mujer}}}}$$

Sustituyendo las expresiones de log-odds en la fórmula del ratio:

$$\text{Ratio} = \frac{e^{\text{log-odds}_{\text{hombre}}}}{e^{\text{log-odds}_{\text{mujer}}}} = \frac{e^{\left( \beta_{0\text{Política}} + \beta_{\text{hombre}} + \beta_{\text{agno}} \cdot \text{agno} \right)}}{e^{\left( \beta_{0\text{Política}} + \beta_{\text{agno}} \cdot \text{agno} \right)}}$$

Simplificando, los términos comunes se cancelan y obtenemos: $\text{Ratio} = e^{\beta_{\text{hombre}}}$

```{r}
# Extraer los coeficientes del modelo para la categoría "Política"
coef_politica <- coef(mnlr_1)["Política", ]
coef_politica

# Año de nacimiento 1950
agno_nacimiento_1950 <- 1950

# Coeficientes para la categoría "Política"
beta_intercept <- coef_politica["(Intercept)"]
beta_genero <- coef_politica["generomasculino"]
beta_agno <- coef_politica["agno_nacimiento"]

# Calcular el término del año de nacimiento para 1950
agno_1950_term <- beta_agno * agno_nacimiento_1950

# Calcular las odds para un hombre (genero = 1)
log_odds_hombre <- beta_intercept + beta_genero * 1 + agno_1950_term
odds_hombre <- exp(log_odds_hombre)

# Calcular las odds para una mujer (genero = 0)
log_odds_mujer <- beta_intercept + beta_genero * 0 + agno_1950_term
odds_mujer <- exp(log_odds_mujer)

# Mostrar resultados
cat("Odds para un hombre nacido en 1950 en la categoría 'Política':", odds_hombre, "\n")
cat("Odds para una mujer nacida en 1950 en la categoría 'Política':", odds_mujer, "\n \n")

# Calcular el ratio de odds hombre/mujer
ratio <- odds_hombre / odds_mujer
cat("Ratio de odds (hombre/mujer) para la categoría 'Política':", ratio, "\n \n")

# Calcular el exponencial del coeficiente del género (equivalente al ratio de odds)
exp_beta_genero <- exp(beta_genero)
cat("Exp(beta_genero) - Equivalente al ratio de odds:", exp_beta_genero, "\n \n")

```

1.3. Calcula la odds ratio de pertener a la categoría "Política" en vez de "Deporte" entre hombres y mujeres.

Para calcular la odds ratio de pertenecer a la categoría "Política" en vez de "Deporte" entre hombres y mujeres, usamos la siguiente expresión:

$$\text{Odds Ratio} = e^{\beta_{\text{hombre, Política}} - \beta_{\text{hombre, Deporte}}}$$

Sustituyendo,

$$
\text{Odds Ratio} = e^{(-0.3291752) - (1.2349601)} = e^{-1.5641353} \approx 0.209
$$

Es decir, las odds de pertenecer a la categoría "Política" en lugar de "Deporte" para hombres son aproximadamente $0.209$ veces las odds de una mujer en la misma comparación.

1.4 Expresa las ecuaciones y calcula la probabilidad de pertenecer a cada categoría para una mujer nacida en 1950.

Para cada categoría $j$, la probabilidad de pertenecer a esa categoría se expresa como:

$$
P(\text{Categoría } j) = \frac{\exp(\beta_{0,j} + \beta_{\text{año},j} \times 1950)}{1 + \sum_{k=1}^{3} \exp(\beta_{0,k} + \beta_{\text{año},k} \times 1950)}
$$

Donde: - $\beta_{0,j}$ es el intercepto de la categoría $j$, - $\beta_{\text{año},j}$ es el coeficiente del año de nacimiento para la categoría $j$, - El denominador es la suma de todos los logits exponentiados de las categorías más la categoría de referencia ("Otro").

Luego, para una mujer nacida en 1950:

-   Probabilidad de "Política":

$$
P(\text{Política}) = \frac{\exp(\beta_{0,\text{Política}} + \beta_{\text{año,Política}} \times 1950)}{1 + \exp(\beta_{0,\text{Política}} + \beta_{\text{año,Política}} \times 1950) + \exp(\beta_{0,\text{Cultura}} + \beta_{\text{año,Cultura}} \times 1950) + \exp(\beta_{0,\text{Deporte}} + \beta_{\text{año,Deporte}} \times 1950)}
$$

-   Probabilidad de "Cultura & Ciencia":

$$
P(\text{Cultura \& Ciencia}) = \frac{\exp(\beta_{0,\text{Cultura}} + \beta_{\text{año,Cultura}} \times 1950)}{1 + \exp(\beta_{0,\text{Política}} + \beta_{\text{año,Política}} \times 1950) + \exp(\beta_{0,\text{Cultura}} + \beta_{\text{año,Cultura}} \times 1950) + \exp(\beta_{0,\text{Deporte}} + \beta_{\text{año,Deporte}} \times 1950)}
$$

-   Probabilidad de "Deporte":

$$
P(\text{Deporte}) = \frac{\exp(\beta_{0,\text{Deporte}} + \beta_{\text{año,Deporte}} \times 1950)}{1 + \exp(\beta_{0,\text{Política}} + \beta_{\text{año,Política}} \times 1950) + \exp(\beta_{0,\text{Cultura}} + \beta_{\text{año,Cultura}} \times 1950) + \exp(\beta_{0,\text{Deporte}} + \beta_{\text{año,Deporte}} \times 1950)}
$$

-   **Probabilidad de "Otro"**:

$$
P(\text{Otro}) = \frac{1}{1 + \exp(\beta_{0,\text{Política}} + \beta_{\text{año,Política}} \times 1950) + \exp(\beta_{0,\text{Cultura}} + \beta_{\text{año,Cultura}} \times 1950) + \exp(\beta_{0,\text{Deporte}} + \beta_{\text{año,Deporte}} \times 1950)}
$$

Manualmente en `R`:

```{r}
# Coeficientes 
coef_politica <- coef(mnlr_1)["Política", ]
coef_cultura  <- coef(mnlr_1)["Cultura & Ciencia", ]
coef_deporte  <- coef(mnlr_1)["Deporte", ]

# Año de nacimiento 1950 para una mujer
agno_nacimiento_1950 <- 1950

# Exponentes de los logits para cada categoría
exp_politica <- exp(coef_politica["(Intercept)"] + coef_politica["agno_nacimiento"]* agno_nacimiento_1950)
exp_cultura  <- exp(coef_cultura["(Intercept)"]  + coef_cultura["agno_nacimiento"]* agno_nacimiento_1950)
exp_deporte  <- exp(coef_deporte["(Intercept)"]  + coef_deporte["agno_nacimiento"]* agno_nacimiento_1950)

# Denominador
denom <- 1 + exp_politica + exp_cultura + exp_deporte

# Calcular probabilidades
prob_politica <- exp_politica / denom
prob_cultura <- exp_cultura / denom
prob_deporte <- exp_deporte / denom
prob_otro <- 1 / denom

# Mostrar los resultados
cat("Probabilidad de pertenecer a 'Política':", prob_politica, "\n")
cat("Probabilidad de pertenecer a 'Cultura & Ciencia':", prob_cultura, "\n")
cat("Probabilidad de pertenecer a 'Deporte':", prob_deporte, "\n")
cat("Probabilidad de pertenecer a 'Otro':", prob_otro, "\n")
```

Versión automática:

```{r}

predict(mnlr_1, newdata = data.frame(genero="femenino", agno_nacimiento=1950), type="probs")
```

1.5. ¿Cuál es *efecto marginal* de año de nacimiento la probabilidad de que una mujer nacida en 1950 se encuentre en la categoría "Política"?

El efecto marginal del año de nacimiento sobre la probabilidad de pertenecer a la categoría "Política" para una mujer nacida en 1950 se expresa como:

$$\frac{\partial P(\text{Politica})}{\partial \text{agno\_nacimiento}} = P(\text{Politica}) \times \left( \beta_{\text{año,Poltica}} - \sum_{k} P(\text{Categoría } k) \times \beta_{\text{año},k} \right)$$

Donde: - $P(\text{Política})$ es la probabilidad de que una mujer pertenezca a la categoría "Política",

-   $\beta_{\text{año,Política}}$ es el coeficiente del año de nacimiento para la categoría "Política",

-   $P(\text{Categoría } k)$ son las probabilidades de pertenecer a cada una de las categorías alternativas ("Cultura & Ciencia", "Deporte", "Otro"),

-   $\beta_{\text{año},k}$ son los coeficientes del año de nacimiento para cada una de las categorías.

En `R`:

```{r}

# Coeficientes del año de nacimiento para cada categoría
beta_anio_politica <- coef_politica["agno_nacimiento"]
beta_anio_cultura <- coef_cultura["agno_nacimiento"]
beta_anio_deporte <- coef_deporte["agno_nacimiento"]

# Calcular el efecto marginal
marginal_effect_politica <- prob_politica * (beta_anio_politica - (prob_politica * beta_anio_politica + prob_cultura * beta_anio_cultura + prob_deporte * beta_anio_deporte))

# Mostrar el resultado
cat("Efecto marginal del año de nacimiento sobre la probabilidad de estar en 'Política':", marginal_effect_politica, "\n")
```

El resultado que obtuvimos es:

$$\frac{\partial P(\text{Politica})}{\partial \text{ano_nacimiento}} \approx -0.00179$$ 

Esto indica que un aumento en un año de nacimiento reduce la probabilidad de pertenecer a la categoría "Política" en aproximadamente un 0.179 puntos porcentuales.

Implementación automática en `R`:

```{r}
slopes(mnlr_1, variables="agno_nacimiento", newdata = data.frame(genero="femenino", agno_nacimiento=1950))
```

2.  Usando los datos de infidelidad, estima un modelo Poisson para la tasa de infidelidad a lo largo del matrimonio.

```{r,  include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}
library("Ecdat")
data(Fair)
affairsdata <- Fair %>% as_tibble()
```

-   La variable `nbaffairs` mide la cantidad de relaciones extra-matrimoniales que ha tenido una persona. La variable `ym` mide los años que una persona ha estado casada.

-   Modela la cantidad de relaciones extra-matrimoniales que ha tenido una persona como función de su genero (`age`), su felicidad en el matrimonio (`rate`) y la interacción entre ambas.

```{r,  include=TRUE, echo=FALSE, warning=FALSE, message=FALSE}
model_inf <- glm(nbaffairs ~  rate*factor(sex), family=poisson(link=log), offset = log(ym), data=affairsdata)
summary(model_inf)
```

10.1 Interpreta el efecto multiplicativo de la variable felicidad en el matrimonio sobre la tasa de infidelidad de los hombres.

Un aumento en una unidad de evaluación de felicidad en el matrimonio disminuye en un 33% ( $e^{-0.31686-0.08003} - 1$ ) la tasa de infidelidad de los hombres.

10.2 Estima la cantidad esperada de relaciones extra-matrimoniales para una mujer en un matrimonio infeliz (`rate`=2) de 20 años de duración.

$\mu_{i} = \theta_{i}\cdot n_{i}$

$\mu_{i} = e^{(\beta_{0} + 2\beta_{rate})} \cdot ym_{i}$

$\mu_{i} = e^{(-0.63898 + 2 \cdot -0.31686)} \cdot 20 = 5.601488$

Implementación en `R`:

```{r}
predict(model_inf, newdata = data.frame(rate=2, sex="female", ym=20), type="response")
```

10.3 Genera un gráfico como el siguiente, que muestre la cantidad esperada de relaciones extra-matrimoniales para hombres y mujeres en matrimonios de distintos niveles de felicidad (rate = 1 ... 5), considerando una duración de 20 años.

```{r, message=FALSE, warning=FALSE,echo=FALSE}

# Crear el dataframe de predicciones usando data_grid()
pred_data <- affairsdata %>%
  data_grid(rate = 1:5, sex = c("female", "male"), ym = 20)

# Calcular las predicciones de cantidad esperada de relaciones extra-matrimoniales
pred_data <- pred_data %>%
  mutate(expected_affairs = predict(model_inf, newdata = pred_data, type = "response"))

# Crear el gráfico con un diseño ochentero y colores llamativos
ggplot(pred_data, aes(x = rate, y = expected_affairs, color = sex)) +
  geom_line(size = 2, linetype = "dashed") +
  geom_point(size = 6, shape = 8) +
  labs(
    x = "Nivel de felicidad en el matrimonio",
    y = "# de Relaciones extra-matrimoniales",
    color = "Género"
  ) +
  scale_color_manual(values = c("female" = "magenta", "male" = "cyan")) +
  theme(
    plot.background = element_rect(fill = "yellow"),
    panel.background = element_rect(fill = "black"),
    plot.title = element_text(
      family = "Comic Sans MS", color = "purple", size = 24, face = "bold", hjust = 0.5
    ),
    plot.subtitle = element_text(
      family = "Comic Sans MS", color = "purple", size = 16, hjust = 0.5
    ),
    axis.title = element_text(
      family = "Courier", color = "orange", size = 14, face = "bold"
    ),
    axis.text = element_text(color = "green", size = 12),
    legend.position = "bottom",
    legend.background = element_rect(fill = "pink", color = "red"),
    legend.title = element_text(family = "Comic Sans MS", color = "blue", size = 12, face = "bold")
  )

```
